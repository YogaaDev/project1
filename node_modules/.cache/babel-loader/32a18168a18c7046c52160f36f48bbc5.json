{"ast":null,"code":"import{lazy,Suspense}from\"react\";import Footer from\"../components/Footer\";import Header from\"../components/Header\";import Home from\"../pages/Home\";import{Styles}from\"../styles/styles\";// Import for candy\nimport{useMemo}from\"react\";import*as anchor from\"@project-serum/anchor\";import{clusterApiUrl}from\"@solana/web3.js\";import{getPhantomWallet,getSlopeWallet,getSolflareWallet,getSolletWallet,getSolletExtensionWallet}from\"@solana/wallet-adapter-wallets\";import{ConnectionProvider,WalletProvider}from\"@solana/wallet-adapter-react\";import{WalletDialogProvider}from\"@solana/wallet-adapter-material-ui\";// Constant for candy\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var treasury=new anchor.web3.PublicKey(process.env.REACT_APP_TREASURY_ADDRESS);var config=new anchor.web3.PublicKey(process.env.REACT_APP_CANDY_MACHINE_CONFIG);var candyMachineId=new anchor.web3.PublicKey(process.env.REACT_APP_CANDY_MACHINE_ID);var network=process.env.REACT_APP_SOLANA_NETWORK;var rpcHost=process.env.REACT_APP_SOLANA_RPC_HOST;var connection=new anchor.web3.Connection(rpcHost);var startDateSeed=parseInt(process.env.REACT_APP_CANDY_START_DATE,10);var txTimeout=30000;// milliseconds (confirm this works for your project)\n// Constante site\nvar History=/*#__PURE__*/lazy(function(){return import(\"../components/History\");});var Card=/*#__PURE__*/lazy(function(){return import(\"../components/Card\");});var Roadmap=/*#__PURE__*/lazy(function(){return import(\"../components/Roadmap\");});var Contact=/*#__PURE__*/lazy(function(){return import(\"../components/ContactForm\");});var Router=function Router(){var endpoint=useMemo(function(){return clusterApiUrl(network);},[]);var wallets=useMemo(function(){return[getPhantomWallet(),getSlopeWallet(),getSolflareWallet(),getSolletWallet({network:network}),getSolletExtensionWallet({network:network})];},[]);return/*#__PURE__*/_jsxs(Suspense,{fallback:null,children:[/*#__PURE__*/_jsx(Styles,{}),/*#__PURE__*/_jsx(ConnectionProvider,{endpoint:endpoint,children:/*#__PURE__*/_jsx(WalletProvider,{wallets:wallets,autoConnect:true,children:/*#__PURE__*/_jsxs(WalletDialogProvider,{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(Home,{candyMachineId:candyMachineId,config:config,connection:connection,startDate:startDateSeed,treasury:treasury,txTimeout:txTimeout}),/*#__PURE__*/_jsx(History,{}),/*#__PURE__*/_jsx(Card,{}),/*#__PURE__*/_jsx(Roadmap,{}),/*#__PURE__*/_jsx(Contact,{}),/*#__PURE__*/_jsx(Footer,{})]})})})]});};export default Router;","map":{"version":3,"sources":["/Users/kevin/Applications/Projets/Okto/Web/src/router/index.tsx"],"names":["lazy","Suspense","Footer","Header","Home","Styles","useMemo","anchor","clusterApiUrl","getPhantomWallet","getSlopeWallet","getSolflareWallet","getSolletWallet","getSolletExtensionWallet","ConnectionProvider","WalletProvider","WalletDialogProvider","treasury","web3","PublicKey","process","env","REACT_APP_TREASURY_ADDRESS","config","REACT_APP_CANDY_MACHINE_CONFIG","candyMachineId","REACT_APP_CANDY_MACHINE_ID","network","REACT_APP_SOLANA_NETWORK","rpcHost","REACT_APP_SOLANA_RPC_HOST","connection","Connection","startDateSeed","parseInt","REACT_APP_CANDY_START_DATE","txTimeout","History","Card","Roadmap","Contact","Router","endpoint","wallets"],"mappings":"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","sourcesContent":["import { lazy, Suspense } from \"react\";\r\nimport Footer from \"../components/Footer\";\r\nimport Header from \"../components/Header\";\r\nimport Home from \"../pages/Home\";\r\nimport { Styles } from \"../styles/styles\";\r\n\r\n// Import for candy\r\nimport { useMemo } from \"react\";\r\nimport * as anchor from \"@project-serum/anchor\";\r\nimport { clusterApiUrl } from \"@solana/web3.js\";\r\nimport { WalletAdapterNetwork } from \"@solana/wallet-adapter-base\";\r\n\r\nimport {\r\n  getPhantomWallet,\r\n  getSlopeWallet,\r\n  getSolflareWallet,\r\n  getSolletWallet,\r\n  getSolletExtensionWallet,\r\n} from \"@solana/wallet-adapter-wallets\";\r\n\r\nimport {\r\n  ConnectionProvider,\r\n  WalletProvider,\r\n} from \"@solana/wallet-adapter-react\";\r\n\r\nimport { WalletDialogProvider } from \"@solana/wallet-adapter-material-ui\";\r\n\r\n// Constant for candy\r\nconst treasury = new anchor.web3.PublicKey( process.env.REACT_APP_TREASURY_ADDRESS! );\r\nconst config = new anchor.web3.PublicKey( process.env.REACT_APP_CANDY_MACHINE_CONFIG! );\r\nconst candyMachineId = new anchor.web3.PublicKey( process.env.REACT_APP_CANDY_MACHINE_ID! );\r\nconst network = process.env.REACT_APP_SOLANA_NETWORK as WalletAdapterNetwork;\r\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST!;\r\nconst connection = new anchor.web3.Connection(rpcHost);\r\nconst startDateSeed = parseInt(process.env.REACT_APP_CANDY_START_DATE!, 10);\r\nconst txTimeout = 30000; // milliseconds (confirm this works for your project)\r\n\r\n// Constante site\r\nconst History = lazy(() => import(\"../components/History\"));\r\nconst Card = lazy(() => import(\"../components/Card\"));\r\nconst Roadmap = lazy(() => import(\"../components/Roadmap\"));\r\nconst Contact = lazy(() => import(\"../components/ContactForm\"));\r\n\r\n\r\nconst Router = () => {\r\n\r\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\r\n\r\n  const wallets = useMemo(\r\n    () => [\r\n        getPhantomWallet(),\r\n        getSlopeWallet(),\r\n        getSolflareWallet(),\r\n        getSolletWallet({ network }),\r\n        getSolletExtensionWallet({ network })\r\n    ],\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Suspense fallback={null}>\r\n      <Styles />\r\n        <ConnectionProvider endpoint={endpoint}>\r\n          <WalletProvider wallets={wallets} autoConnect={true}>\r\n            <WalletDialogProvider>\r\n            \r\n              <Header />\r\n            \r\n              <Home\r\n                candyMachineId={candyMachineId}\r\n                config={config}\r\n                connection={connection}\r\n                startDate={startDateSeed}\r\n                treasury={treasury}\r\n                txTimeout={txTimeout}\r\n              />\r\n              \r\n              <History />\r\n              <Card />\r\n              <Roadmap />\r\n              <Contact />\r\n\r\n              <Footer />\r\n\r\n            </WalletDialogProvider>\r\n          </WalletProvider>\r\n        </ConnectionProvider>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n"]},"metadata":{},"sourceType":"module"}