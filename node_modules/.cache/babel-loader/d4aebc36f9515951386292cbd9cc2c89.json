{"ast":null,"code":"var _jsxFileName = \"/Users/kevin/Applications/Projets/Okto/Web/src/router/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { lazy, Suspense } from \"react\";\nimport Footer from \"../components/Footer\";\nimport Header from \"../components/Header\";\nimport Home from \"../pages/Home\";\nimport { Styles } from \"../styles/styles\";\n// Import for candy\nimport { useMemo } from \"react\";\nimport * as anchor from \"@project-serum/anchor\";\nimport { clusterApiUrl } from \"@solana/web3.js\";\nimport { getPhantomWallet, getSlopeWallet, getSolflareWallet, getSolletWallet, getSolletExtensionWallet } from \"@solana/wallet-adapter-wallets\";\nimport { ConnectionProvider, WalletProvider } from \"@solana/wallet-adapter-react\";\nimport { WalletDialogProvider } from \"@solana/wallet-adapter-material-ui\"; // Constant for candy\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst treasury = new anchor.web3.PublicKey(process.env.REACT_APP_TREASURY_ADDRESS);\nconst config = new anchor.web3.PublicKey(process.env.REACT_APP_CANDY_MACHINE_CONFIG);\nconst candyMachineId = new anchor.web3.PublicKey(process.env.REACT_APP_CANDY_MACHINE_ID);\nconst network = process.env.REACT_APP_SOLANA_NETWORK;\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST;\nconst connection = new anchor.web3.Connection(rpcHost);\nconst startDateSeed = parseInt(process.env.REACT_APP_CANDY_START_DATE, 10);\nconst txTimeout = 30000; // milliseconds (confirm this works for your project)\n// Constante site\n\nconst Block1 = /*#__PURE__*/lazy(_c = () => import(\"../components/Block1\"));\n_c2 = Block1;\nconst Card = /*#__PURE__*/lazy(_c3 = () => import(\"../components/Card\"));\n_c4 = Card;\nconst Roadmap = /*#__PURE__*/lazy(_c5 = () => import(\"../components/Roadmap\"));\n_c6 = Roadmap;\nconst Team = /*#__PURE__*/lazy(_c7 = () => import(\"../components/Team\"));\n_c8 = Team;\nconst Join = /*#__PURE__*/lazy(_c9 = () => import(\"../components/Join\"));\n_c10 = Join;\nconst Faq = /*#__PURE__*/lazy(_c11 = () => import(\"../components/Faq\"));\n_c12 = Faq;\n\nconst Router = () => {\n  _s();\n\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\n  const wallets = useMemo(() => [getPhantomWallet(), getSlopeWallet(), getSolflareWallet(), getSolletWallet({\n    network\n  }), getSolletExtensionWallet({\n    network\n  })], []);\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: null,\n    children: [/*#__PURE__*/_jsxDEV(Styles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConnectionProvider, {\n      endpoint: endpoint,\n      children: /*#__PURE__*/_jsxDEV(WalletProvider, {\n        wallets: wallets,\n        autoConnect: true,\n        children: /*#__PURE__*/_jsxDEV(WalletDialogProvider, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundImage: \"linear-gradient(to bottom, #151520, #03224c)\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Home, {\n              candyMachineId: candyMachineId,\n              config: config,\n              connection: connection,\n              startDate: startDateSeed,\n              treasury: treasury,\n              txTimeout: txTimeout\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Block1, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Roadmap, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Join, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Faq, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Router, \"RNaTq20PjYTGasfEtgZ8qKkPMD0=\");\n\n_c13 = Router;\nexport default Router;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13;\n\n$RefreshReg$(_c, \"Block1$lazy\");\n$RefreshReg$(_c2, \"Block1\");\n$RefreshReg$(_c3, \"Card$lazy\");\n$RefreshReg$(_c4, \"Card\");\n$RefreshReg$(_c5, \"Roadmap$lazy\");\n$RefreshReg$(_c6, \"Roadmap\");\n$RefreshReg$(_c7, \"Team$lazy\");\n$RefreshReg$(_c8, \"Team\");\n$RefreshReg$(_c9, \"Join$lazy\");\n$RefreshReg$(_c10, \"Join\");\n$RefreshReg$(_c11, \"Faq$lazy\");\n$RefreshReg$(_c12, \"Faq\");\n$RefreshReg$(_c13, \"Router\");","map":{"version":3,"sources":["/Users/kevin/Applications/Projets/Okto/Web/src/router/index.tsx"],"names":["lazy","Suspense","Footer","Header","Home","Styles","useMemo","anchor","clusterApiUrl","getPhantomWallet","getSlopeWallet","getSolflareWallet","getSolletWallet","getSolletExtensionWallet","ConnectionProvider","WalletProvider","WalletDialogProvider","treasury","web3","PublicKey","process","env","REACT_APP_TREASURY_ADDRESS","config","REACT_APP_CANDY_MACHINE_CONFIG","candyMachineId","REACT_APP_CANDY_MACHINE_ID","network","REACT_APP_SOLANA_NETWORK","rpcHost","REACT_APP_SOLANA_RPC_HOST","connection","Connection","startDateSeed","parseInt","REACT_APP_CANDY_START_DATE","txTimeout","Block1","Card","Roadmap","Team","Join","Faq","Router","endpoint","wallets","backgroundImage"],"mappings":"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","sourcesContent":["import { lazy, Suspense } from \"react\";\r\nimport Footer from \"../components/Footer\";\r\nimport Header from \"../components/Header\";\r\nimport Home from \"../pages/Home\";\r\nimport { Styles } from \"../styles/styles\";\r\nimport backgroundImg from \"../common/Img/background_home.png\";\r\n\r\n// Import for candy\r\nimport { useMemo } from \"react\";\r\nimport * as anchor from \"@project-serum/anchor\";\r\nimport { clusterApiUrl } from \"@solana/web3.js\";\r\nimport { WalletAdapterNetwork } from \"@solana/wallet-adapter-base\";\r\n\r\nimport {\r\n  getPhantomWallet,\r\n  getSlopeWallet,\r\n  getSolflareWallet,\r\n  getSolletWallet,\r\n  getSolletExtensionWallet,\r\n} from \"@solana/wallet-adapter-wallets\";\r\n\r\nimport {\r\n  ConnectionProvider,\r\n  WalletProvider,\r\n} from \"@solana/wallet-adapter-react\";\r\n\r\nimport { WalletDialogProvider } from \"@solana/wallet-adapter-material-ui\";\r\n\r\n// Constant for candy\r\nconst treasury = new anchor.web3.PublicKey( process.env.REACT_APP_TREASURY_ADDRESS! );\r\nconst config = new anchor.web3.PublicKey( process.env.REACT_APP_CANDY_MACHINE_CONFIG! );\r\nconst candyMachineId = new anchor.web3.PublicKey( process.env.REACT_APP_CANDY_MACHINE_ID! );\r\nconst network = process.env.REACT_APP_SOLANA_NETWORK as WalletAdapterNetwork;\r\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST!;\r\nconst connection = new anchor.web3.Connection(rpcHost);\r\nconst startDateSeed = parseInt(process.env.REACT_APP_CANDY_START_DATE!, 10);\r\nconst txTimeout = 30000; // milliseconds (confirm this works for your project)\r\n\r\n// Constante site\r\nconst Block1 = lazy(() => import(\"../components/Block1\"));\r\nconst Card = lazy(() => import(\"../components/Card\"));\r\nconst Roadmap = lazy(() => import(\"../components/Roadmap\"));\r\nconst Team = lazy(() => import(\"../components/Team\"));\r\nconst Join = lazy(() => import(\"../components/Join\"));\r\nconst Faq = lazy(() => import(\"../components/Faq\"));\r\n\r\nconst Router = () => {\r\n\r\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\r\n\r\n  const wallets = useMemo(\r\n    () => [\r\n        getPhantomWallet(),\r\n        getSlopeWallet(),\r\n        getSolflareWallet(),\r\n        getSolletWallet({ network }),\r\n        getSolletExtensionWallet({ network })\r\n    ],\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Suspense fallback={null}>\r\n      <Styles />\r\n      \r\n        <ConnectionProvider endpoint={endpoint}>\r\n          <WalletProvider wallets={wallets} autoConnect={true}>\r\n            <WalletDialogProvider>\r\n              \r\n              <div style = {{ backgroundImage: \"linear-gradient(to bottom, #151520, #03224c)\"}} >\r\n              {/* <div style ={ { backgroundImage: 'url(' + backgroundImg + ')' } }> */}\r\n                <Header />\r\n                <Home\r\n                  candyMachineId={candyMachineId}\r\n                  config={config}\r\n                  connection={connection}\r\n                  startDate={startDateSeed}\r\n                  treasury={treasury}\r\n                  txTimeout={txTimeout}\r\n                />\r\n              {/* </div> */}\r\n              </div>\r\n            </WalletDialogProvider>\r\n          </WalletProvider>\r\n        </ConnectionProvider>\r\n\r\n        <Block1 />\r\n        <Card />\r\n        <Roadmap />\r\n        <Join />\r\n        <Faq />\r\n        <Footer />\r\n\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n"]},"metadata":{},"sourceType":"module"}